- name: Create node_exporter group
  ansible.builtin.group:
    name: "{{ node_exporter_group }}"
    state: present
  tags:
    - node_exporter

- name: Create node_exporter user
  ansible.builtin.user:
    name: "{{ node_exporter_user }}"
    group: "{{ node_exporter_group }}"
    state: present
    create_home: false
    shell: /sbin/nologin
  tags:
    - node_exporter

- name: Ensure node_exporter bin directory exists
  ansible.builtin.file:
    path: "{{ node_exporter_bin_dir }}"
    state: directory
    mode: '0755'
    owner: "{{ node_exporter_user }}"
    group: "{{ node_exporter_group }}"
  tags:
    - node_exporter

- name: Create artifacts directory
  ansible.builtin.file:
    path: "{{ node_exporter_artifacts_dir }}"
    mode: '0755'
    state: directory
  tags:
    - node_exporter

- name: Create node_exporter directories
  ansible.builtin.file:
    dest: "{{ item }}"
    state: directory
    owner: "{{ node_exporter_user }}"
    group: "{{ node_exporter_group }}"
    mode: '0755'
  loop:
    - "{{ node_exporter_conf_dir }}"
    - "{{ node_exporter_bin_dir }}"
    - "{{ node_exporter_home_dir }}"
    - "{{ node_exporter_log_dir }}"
  tags:
    - node_exporter

# Проверка, нужно ли устанавливать node_exporter через роль packages
- name: Ensure node_exporter is installed
  ansible.builtin.include_role:
    name: packages
  vars:
    packages_github_url: "{{ node_exporter_url }}"
    packages_bin_dir: "{{ node_exporter_bin_dir }}"
    packages_github_list:
      - name: "{{ node_exporter_package_name }}"
        strip_components: 1
        tar_filename: "node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
        version: "{{ node_exporter_version }}"
    packages_install: "{{ node_exporter_install }}"  # Передаем флаг для установки
  when: node_exporter_install
  tags:
    - node_exporter
    
- name: Reload systemd manager configuration
  ansible.builtin.systemd:
    daemon_reload: yes
  tags:
    - node_exporter

- name: Restart node_exporter service
  ansible.builtin.systemd:
    name: node_exporter
    enabled: true
    state: restarted
  tags:
    - node_exporter

- name: Configure systemd unit for node_exporter
  ansible.builtin.template:
    src: "node_exporter.service.j2"
    dest: "/etc/systemd/system/node_exporter.service"
    mode: '0644'
  tags:
    - node_exporter

- name: Restart node_exporter service
  ansible.builtin.systemd:
    name: node_exporter
    enabled: true
    state: restarted
  tags:
    - node_exporter

# === Добавляем работу с role.json и node_exporter.json ===

- name: Read metadata from role.json
  ansible.builtin.slurp:
    src: "/etc/consul.d/role.json"
  register: role_json_raw
  tags:
    - node_exporter

- name: Parse role.json
  ansible.builtin.set_fact:
    role_meta: "{{ role_json_raw['content'] | b64decode | from_json }}"
  tags:
    - node_exporter

- name: Debug parsed roles.json
  ansible.builtin.debug:
    var: role_meta.node_meta

- name: Debug parsed role_meta
  ansible.builtin.debug:
    var: role_meta

- name: Generate node_exporter.json with metadata
  ansible.builtin.template:
    src: "node_exporter.json.j2"
    dest: "/etc/consul.d/node_exporter.json"
    owner: consul
    group: consul
    mode: '0644'
  tags:
    - node_exporter

- name: Restart Consul to apply changes
  ansible.builtin.systemd:
    name: consul
    state: restarted
  tags:
    - node_exporter

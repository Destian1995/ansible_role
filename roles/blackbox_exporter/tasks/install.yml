- name: Ensure blackbox_exporter user exists
  user:
    name: "{{ blackbox_exporter_user }}"
    group: "{{ blackbox_exporter_group }}"
    system: yes
    shell: /sbin/nologin

- name: Create blackbox_exporter installation directory
  file:
    path: "{{ blackbox_exporter_install_dir }}"
    state: directory
    owner: "{{ blackbox_exporter_user }}"
    group: "{{ blackbox_exporter_group }}"

- name: Download Blackbox Exporter binary
  get_url:
    url: "https://github.com/prometheus/blackbox_exporter/releases/download/v{{ blackbox_version }}/{{ blackbox_tar_filename }}"
    dest: "/tmp/{{ blackbox_tar_filename }}"
    checksum: "{{ blackbox_exporter_checksum }}"

- name: Extract Blackbox Exporter binary
  unarchive:
    src: "/tmp/{{ blackbox_tar_filename }}"
    dest: "{{ blackbox_temp_dir }}"
    remote_src: yes

- name: List contents of the extracted directory
  command: ls -la /tmp/blackbox_exporter-{{ blackbox_version }}.linux-amd64
  register: extracted_contents
  changed_when: false

- name: Debug extracted contents
  debug:
    var: extracted_contents.stdout_lines

- name: Debug current working directory
  command: pwd
  register: pwd_output
  changed_when: false

- name: Debug pwd output
  debug:
    var: pwd_output.stdout

- name: Copy Blackbox Exporter binary to installation directory
  copy:
    src: "{{ blackbox_temp_dir }}/{{ blackbox_package_name }}/blackbox_exporter"
    dest: "{{ blackbox_exporter_install_dir }}/blackbox_exporter"
    mode: '0755'
    owner: "{{ blackbox_exporter_user }}"
    group: "{{ blackbox_exporter_group }}"
    remote_src: yes

- name: Create configuration directory for blackbox_exporter
  file:
    path: "{{ blackbox_config_dir }}"
    state: directory
    owner: "{{ blackbox_exporter_user }}"
    group: "{{ blackbox_exporter_group }}"

- name: Read role.json file
  slurp:
    path: /etc/consul.d/role.json
  register: roles_json_content

- name: Parse role.json content
  set_fact:
    roles_data: "{{ roles_json_content.content | b64decode | from_json }}"

- name: Extract system tag from role.json
  set_fact:
    system_tag: "{{ roles_data.node_meta.system if roles_data.node_meta is defined and roles_data.node_meta.system is defined else 'default_system' }}"

- name: Extract consul_server from role.json
  set_fact:
    consul_server: "{{ roles_data.consul_server if roles_data.consul_server is defined else 'consul-server:8500' }}"

- name: Extract consul_query_name from roles.json
  set_fact:
    consul_query_name: "{{ roles_data.consul_query_name if roles_data.consul_query_name is defined else 'consul.service' }}"

- name: Copy blackbox_exporter configuration file
  template:
    src: blackbox.yml.j2
    dest: "{{ blackbox_exporter_config_file }}"
    owner: "{{ blackbox_exporter_user }}"
    group: "{{ blackbox_exporter_group }}"
    mode: '0644'
  notify: restart blackbox_exporter

- name: Create systemd service file for blackbox_exporter
  template:
    src: blackbox_exporter.service.j2
    dest: /etc/systemd/system/blackbox_exporter.service
    owner: root
    group: root
    mode: '0644'
  notify: restart blackbox_exporter

- name: Start and enable blackbox_exporter service
  systemd:
    name: blackbox_exporter
    state: started
    enabled: yes
